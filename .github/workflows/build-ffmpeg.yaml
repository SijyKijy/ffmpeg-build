name: Build FFmpeg

on:
  workflow_dispatch:
    inputs:
      architecture:
        description: "Select architecture to build"
        required: true
        default: "both"
        type: choice
        options:
          - win32
          - win64
          - both
      version:
        description: "FFmpeg version to checkout"
        required: false
        default: "n6.0"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Determine architecture
        id: determine-arch
        run: |
          if [[ "${{ inputs.architecture }}" == "both" ]]; then
            echo "arch=multi" >> $GITHUB_ENV
          else
            echo "arch=${{ inputs.architecture }}" >> $GITHUB_ENV
          fi

      - name: Checkout ffmpeg-windows-build-helpers
        uses: actions/checkout@v4
        with:
          repository: rdp/ffmpeg-windows-build-helpers
          ref: master
          persist-credentials: false

      # - name: Install APT dependencies
      #   uses: awalsh128/cache-apt-pkgs-action@v1
      #   with:
      #     packages: subversion ragel curl texinfo g++ ed bison flex cvs yasm automake libtool autoconf gcc cmake git make pkg-config zlib1g-dev unzip pax nasm gperf autogen bzip2 autoconf-archive p7zip-full meson clang python3-distutils python-is-python3 mingw-w64 mingw-w64-tools mingw-w64-x86-64-dev libtool-bin

      # - name: Install pip dependencies
      #   run: sudo -H pip3 -qq install meson ninja

      - name: Install dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get install -y \
          subversion \
          ragel \
          curl \
          texinfo \
          g++ \
          bison \
          flex \
          cvs \
          yasm \
          automake \
          libtool \
          autoconf \
          gcc \
          cmake \
          git \
          make \
          pkg-config \
          zlib1g-dev \
          unzip \
          pax \
          nasm \
          gperf \
          autogen \
          bzip2 \
          autoconf-archive \
          p7zip-full \
          meson \
          clang \
          python \
          python3-setuptools \
          wget \
          ed

      - name: Compile FFmpeg for ${{ env.arch }}
        run: |
          sudo ./cross_compile_ffmpeg.sh \
            --ffmpeg-git-checkout-version=${{ inputs.version }} \
            --compiler-flavors=${{ env.arch }} \
            --build-ffmpeg-shared=n \
            --build-ffmpeg-static=y \
            --disable-nonfree=y \
            --build-intel-qsv=y \
            --enable-gpl=y

      - name: Find generated archive
        id: find-archive
        run: |
          echo "=== Looking for FFmpeg archive ==="
          find $GITHUB_WORKSPACE/sandbox/redist -name "ffmpeg-*.7z"
          
          echo "=== All files in redist directory ==="
          ls -la $GITHUB_WORKSPACE/sandbox/redist/
          
          # Store archive path in environment variable
          archive_path=$(find $GITHUB_WORKSPACE/sandbox/redist -name "ffmpeg-*.7z" | head -n 1)
          echo "archive_path=$archive_path" >> $GITHUB_ENV

      - name: Upload FFmpeg archive
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-${{ env.arch }}
          path: ${{ env.archive_path }}
